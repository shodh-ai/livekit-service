name: Build and Deploy LiveKit Service to VM

# This pipeline runs every time you push to the 'main' branch
on:
  push:
    branches: [ "romeisclose" ]

jobs:
  build-and-deploy:
    # Use a standard amd64 Linux server provided by GitHub
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using the secrets you stored
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Set up Docker Buildx for cross-platform building
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Build the amd64 image and push it directly to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platform: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/livekit-service:latest

      # Step 5: SSH into the VM and deploy the new image
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "--- Starting deployment for livekit-service ---"
            
            # Pull the new version of the image from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/livekit-service:latest
            
            # Stop and remove the old container if it exists
            docker stop livekit-service-host || true
            docker rm livekit-service-host || true
            
            # Run the new container with its specific configuration
            docker run \
              -d \
              --restart always \
              -p 5005:5005 \
              --env-file /root/livekit-service.env \
              --name livekit-service-host \
              ${{ secrets.DOCKERHUB_USERNAME }}/livekit-service:latest
              
            echo "--- Deployment complete ---"